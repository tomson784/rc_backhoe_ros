# image: ros:noetic-ros-core

cache:
  paths:
    - ccache/

before_script:
  - apt update >/dev/null && apt install -y git >/dev/null
  - git clone https://gitlab.com/VictorLamoine/ros_gitlab_ci.git >/dev/null
  - source ros_gitlab_ci/gitlab-ci.bash >/dev/null
  # - apt install -y python-is-python3 && pip install rospy
  # - apt install -y ros-noetic-tf2 ros-noetic-tf2-geometry-msgs ros-noetic-geometry2
  # - apt install -y ros-noetic-imu-tools ros-noetic-robot-state-publisher ros-noetic-joint-state-publisher
  # - apt install -y ros-noetic-moveit ros-noetic-ros-control ros-noetic-ros-controllers
  # - apt install -y ros-noetic-gazebo-plugins ros-noetic-gazebo-ros-pkgs ros-noetic-gazebo-ros-control

catkin_make_noetic:
  # stage: build
  image: ros:noetic-ros-core
  script:
    - apt install -y 
      ros-$ROS_DISTRO-tf2 ros-$ROS_DISTRO-tf2-geometry-msgs ros-$ROS_DISTRO-geometry2
      ros-$ROS_DISTRO-imu-tools ros-$ROS_DISTRO-robot-state-publisher ros-$ROS_DISTRO-joint-state-publisher
      ros-$ROS_DISTRO-moveit ros-$ROS_DISTRO-ros-control ros-$ROS_DISTRO-ros-controllers
      ros-$ROS_DISTRO-gazebo-plugins ros-$ROS_DISTRO-gazebo-ros-pkgs ros-$ROS_DISTRO-gazebo-ros-control
    - catkin_make
    # - source ~/.bashrc
    - catkin_make run_tests
    - catkin_test_results # Check if one of the tests failed!
  rules:
    - if: '$CI_COMMIT_BRANCH != "main"'
      when: never
    - changes:
      - "docs/*"
      - "sample_data/*"
      - "*.md"
      when: never
    - when: on_success

catkin_make_melodic:
  # stage: build
  image: ros:melodic-ros-core
  script:
    - apt install -y 
      ros-$ROS_DISTRO-tf2 ros-$ROS_DISTRO-tf2-geometry-msgs ros-$ROS_DISTRO-geometry2
      ros-$ROS_DISTRO-imu-tools ros-$ROS_DISTRO-robot-state-publisher ros-$ROS_DISTRO-joint-state-publisher
      ros-$ROS_DISTRO-moveit ros-$ROS_DISTRO-ros-control ros-$ROS_DISTRO-ros-controllers
      ros-$ROS_DISTRO-gazebo-plugins ros-$ROS_DISTRO-gazebo-ros-pkgs ros-$ROS_DISTRO-gazebo-ros-control
    - catkin_make
    # - source ~/.bashrc
    - catkin_make run_tests
    - catkin_test_results # Check if one of the tests failed!
  rules:
    - if: '$CI_COMMIT_BRANCH != "main"'
      when: never
    - changes:
      - "docs/*"
      - "sample_data/*"
      - "*.md"
      when: never
    - when: on_success

# catkin_make tests:
#   stage: test
#   script:
#   dependencies: [] # Do not download artifacts (they were created with catkin tools)
#   rules:
#     - if: '$CI_COMMIT_BRANCH != "main"'
#       when: never
#     - changes:
#       - "docs/*"
#       - "rc_backhoe_ros/sample_data/*"
#       - "*.md"
#       when: never
#     - when: on_success

# catkin tools:
#   stage: build
#   script:
#     - catkin build --summarize --no-status --force-color
